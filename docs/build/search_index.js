var documenterSearchIndex = {"docs":
[{"location":"#DiscreteFunctions","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"","category":"section"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"This module defines the DiscreteFunction type which represents a function defined on the set {1,2,...,n} (n must be positive).","category":"page"},{"location":"#Basic-Constructor","page":"DiscreteFunctions","title":"Basic Constructor","text":"","category":"section"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"A DiscreteFunction is created by providing a list of values either by passing an array of Int values or as a list of Int arguments. For example, to define a function f with f(1)==2, f(2)==3, f(3)==1, and f(4)==4 we do this:","category":"page"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"julia> using DiscreteFunctions\n\njulia> f = DiscreteFunction([2,3,1,4]);\n\njulia> g = DiscreteFunction(2,3,1,4);\n\njulia> f==g\ntrue","category":"page"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"Function evaluation may use either f(x) or f[x]. It is possible to change the value of f at x using the latter.","category":"page"},{"location":"#Conversion-of-a-Permutation-to-a-DiscreteFunction","page":"DiscreteFunctions","title":"Conversion of a Permutation to a DiscreteFunction","text":"","category":"section"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"If p is a Permutation then DiscreteFunction(p) creates a DiscreteFunction based on p.","category":"page"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"julia> using Permutations\n\njulia> p = RandomPermutation(6)\n(1,6)(2,5,3,4)\n\njulia> DiscreteFunction(p)\nDiscreteFunction on [6]\n   1   2   3   4   5   6\n   6   5   4   2   3   1","category":"page"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"Conversely, if f is a DiscreteFunction that is invertible, it can be converted to a Permutation by Permutation(f).","category":"page"},{"location":"#Conversion-of-a-Matrix-to-a-DiscreteFunction","page":"DiscreteFunctions","title":"Conversion of a Matrix to a DiscreteFunction","text":"","category":"section"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"Let A be a square matrix with exactly one nonzero element in each row. Then DiscreteFunction(A) creates a DiscreteFunction f such that f[i]==j exactly when A[i,j] != 0.","category":"page"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"This is the inverse of the Matrix function (see below). That is, if A==Matrix(f) then f==DiscreteFunction(A).","category":"page"},{"location":"#Special-Constructors","page":"DiscreteFunctions","title":"Special Constructors","text":"","category":"section"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"IdentityFunction(n) creates the identity function on the set {1,2,...,n}.\nRandomFunction(n) creates a random function on the set {1,2,...,n}.","category":"page"},{"location":"#Operations-and-Methods","page":"DiscreteFunctions","title":"Operations and Methods","text":"","category":"section"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"The composition of functions f and g is computed with f*g. Exponentiation signals repeated composition, i.e., f^4 is the same as f*f*f*f.","category":"page"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"We can test if f is invertible using has_inv(f) and inv(f) returns the inverse function (or throws an error if no inverse exists). This can also be computed as f^-1 and, in general, if f is invertible it can be raised to negative exponents. The function is_permutation is a synonym for has_inv.","category":"page"},{"location":"#Other-methods","page":"DiscreteFunctions","title":"Other methods","text":"","category":"section"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"length(f) returns the number of elements in f's domain.  \nfixed_points(f) returns a list of the fixed points in the function.\ncycles(f) returns a list of the cycles in the function.\nimage(f) returns a Set containing the output values of f.\nsources(f) returns a list of all inputs to f that are not outputs of f.\nMatrix(f) returns a square, zero-one matrix with a one in position i,j exactly when f(i)==j.\neigvals(f) returns the eigenvalues of Matrix(f).","category":"page"},{"location":"#Expensive-operations","page":"DiscreteFunctions","title":"Expensive operations","text":"","category":"section"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"all_functions(n) returns an iterator for all functions defined on 1:n. Note that there are n^n such functions so this grows quickly.\nsqrt(g) returns a DiscreteFunction f such that f*f==g or throws an error if no such function exists.  Found using integer linear programming.\nall_sqrts(g) returns a list of all square roots of g. Very slow.","category":"page"},{"location":"#Extras","page":"DiscreteFunctions","title":"Extras","text":"","category":"section"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"This is some additional code that is not automatically loaded by using DiscreteFunctions. Use include on the appropriate file in the src directory.","category":"page"},{"location":"#src/tree_function.jl","page":"DiscreteFunctions","title":"src/tree_function.jl","text":"","category":"section"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"This file defines tree2function(G::SimpleGraph). It assumes that G is a tree with vertex set 1:n and returns a DiscreteFunction defined by pointing all edges toward the root, 1.","category":"page"},{"location":"#src/draw_function.jl","page":"DiscreteFunctions","title":"src/draw_function.jl","text":"","category":"section"},{"location":"","page":"DiscreteFunctions","title":"DiscreteFunctions","text":"This file defines draw(f) to give a picture of f.","category":"page"}]
}
